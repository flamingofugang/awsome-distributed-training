# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0

AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This CloudFormation stack creates all the necessary pre-requisites for Amazon SageMaker Hyperpod with BYO VPC,
  these include a security group, a FSx Lustre Filesystem, S3 Bucket and IAM Role.
  In addition you deploy several VPC endpoints for Amazon S3, SSM, STS, Logs, Monitoring, etc. 
  The template creates an fsx lustre volume in the specified AZ with a default of
  1.2 TB storage which can be overridden by parameter. A role is also created which
  helps to execute HyperPod cluster operations.


######################
## Stack Parameters ##
######################

Parameters:
  ParamVPCid:
    Description: Bring your own VPC, the existing VPC id
    Type: String 

  ParamPrivateSubnetid:
    Description: Bring your own Private Subnet 
    Type: String

  ParamPrivateRouteTable:
    Description: Bring your own Private Subnet Route Table
    Type: String

  Capacity:
    Description: Storage capacity in GiB (1200 or increments of 2400)
    Type: Number
    Default: 1200

  S3Bucket:
    Description: S3 Bucket to save lifecycle configuration file
    Type: String
    Default: "sagemaker-lifecycle"

  PerUnitStorageThroughput:
    Description: Provisioned Read/Write (MB/s/TiB)
    Type: Number
    Default: 250
    AllowedValues:
      - 125
      - 250
      - 500
      - 1000

  Compression:
    Description: Data compression type
    Type: String
    AllowedValues:
      - "LZ4"
      - "NONE"
    Default: "LZ4"

  LustreVersion:
    Description: Lustre software version
    Type: String
    AllowedValues:
      - "2.15"
      - "2.12"
    Default: "2.15"


#########################
## VPC & Network Setup ##
#########################


Resources:

  # NOTE: when you create additional security groups, you must ensure that every
  # security group has ingress/egress from/to its own security group id. Failure
  # to do so may cause trn1/p4d/p4de/p5 SMHP cluster creation to fail:
  #
  #     Instance i-aaaabbbbccccddddf failed to provision with the following
  #     error: "EFA health checks did not run successfully. Ensure that your
  #     VPC and security groups are properly configured before attempting to
  #     create a new cluster." Note that multiple instances may be impacted."
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow EFA communication for Multi-Node Parallel Batch jobs
      VpcId: !Ref ParamVPCid
  EFASecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: All to all communication for EFA Ingress within Security Group
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      GroupId: !Ref SecurityGroup
      SourceSecurityGroupId: !Ref SecurityGroup
  EFASecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: All to all communication for EFA Egress  within Security Group
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      GroupId: !Ref SecurityGroup
      DestinationSecurityGroupId: !Ref SecurityGroup
  EFASecurityGroupEgressECS:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: All to all communication for Egress to all
      IpProtocol: -1
      FromPort: -1
      ToPort: -1
      GroupId: !Ref SecurityGroup
      CidrIp: 0.0.0.0/0

  # S3 endpoint
  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
            - Effect: Allow
              Principal: '*'
              Action:
                - '*'
              Resource:
                - '*'
      RouteTableIds:
        - !Ref ParamPrivateRouteTable
      ServiceName: !Join
        - ''
        - - com.amazonaws.
          - !Ref AWS::Region
          - .s3
      VpcId: !Ref ParamVPCid
  
  SSMVPCVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ParamVPCid
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssm
      SubnetIds:
        - !Ref ParamPrivateSubnetid
      SecurityGroupIds:
        - !Ref SecurityGroup
      VpcEndpointType: Interface
      PrivateDnsEnabled: true

  SSMMessagesVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ParamVPCid
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ssmmessages
      SubnetIds:
        - !Ref ParamPrivateSubnetid
      SecurityGroupIds:
        - !Ref SecurityGroup
      VpcEndpointType: Interface
      PrivateDnsEnabled: true

  STSVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ParamVPCid
      ServiceName: !Sub com.amazonaws.${AWS::Region}.sts
      SubnetIds:
        - !Ref ParamPrivateSubnetid
      SecurityGroupIds:
        - !Ref SecurityGroup
      VpcEndpointType: Interface
      PrivateDnsEnabled: true

  LogsVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ParamVPCid
      ServiceName: !Sub com.amazonaws.${AWS::Region}.logs
      SubnetIds:
        - !Ref ParamPrivateSubnetid
      SecurityGroupIds:
        - !Ref SecurityGroup
      VpcEndpointType: Interface
      PrivateDnsEnabled: true

  MonitoringVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref ParamVPCid
      ServiceName: !Sub com.amazonaws.${AWS::Region}.monitoring
      SubnetIds:
        - !Ref ParamPrivateSubnetid
      SecurityGroupIds:
        - !Ref SecurityGroup
      VpcEndpointType: Interface
      PrivateDnsEnabled: true


  FSxLFilesystem:
    Type: AWS::FSx::FileSystem
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      FileSystemType: LUSTRE
      StorageType: SSD
      FileSystemTypeVersion: !Ref LustreVersion
      StorageCapacity: !Ref Capacity
      SecurityGroupIds:
        - !Ref SecurityGroup
      SubnetIds:
        - !Ref ParamPrivateSubnetid
      LustreConfiguration:
        DataCompressionType: !Ref Compression
        DeploymentType: PERSISTENT_2
        PerUnitStorageThroughput: !Ref PerUnitStorageThroughput
        MetadataConfiguration:
          Mode: AUTOMATIC

  AmazonSagemakerClusterExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - sagemaker.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonSageMakerClusterInstanceRolePolicy"
      Policies:
        - PolicyName: AmazonSagemakerClusterVPCPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                    [
                    "ec2:CreateNetworkInterface",
                    "ec2:CreateNetworkInterfacePermission",
                    "ec2:DeleteNetworkInterface",
                    "ec2:DeleteNetworkInterfacePermission",
                    "ec2:DescribeNetworkInterfaces",
                    "ec2:DescribeVpcs",
                    "ec2:DescribeDhcpOptions",
                    "ec2:DescribeSubnets",
                    "ec2:DescribeSecurityGroups",
                    "ec2:DetachNetworkInterface",
                    "ec2:CreateTags"
                ]
                Resource: "*"
  LCScriptsBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: Retain
    Properties:
      BucketName:
       !Sub
          - '${S3Bucket}-${RandomGUID}'
          - { RandomGUID: !Select [0, !Split ["-", !Select [2, !Split ["/", !Ref AWS::StackId ]]]] }

  SSMSessionManagerRunShellAsUbuntu:
    Type: AWS::SSM::Document
    Properties:
      Name: "SSM-SessionManagerRunShellAsUbuntu"
      DocumentType: "Session"
      Content:
        schemaVersion: "1.0"
        description: "Document to hold regional settings for Session Manager"
        sessionType: "Standard_Stream"
        inputs:
          s3BucketName: ""
          s3KeyPrefix: ""
          s3EncryptionEnabled: true
          cloudWatchLogGroupName: ""
          cloudWatchEncryptionEnabled: true
          cloudWatchStreamingEnabled: true
          idleSessionTimeout: "20"
          maxSessionDuration: ""
          kmsKeyId: ""
          runAsEnabled: true
          runAsDefaultUser: "ubuntu"
          shellProfile:
            windows: ""
            linux: "/bin/bash -c 'sudo su - ubuntu'"

#############
## Outputs ##
#############
Outputs:
  SecurityGroup:
    Value: !Ref SecurityGroup
    Description: SecurityGroup for Batch
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroup
  FSxLustreFilesystemMountname:
    Description: The ID of the FSxL filesystem that has been created
    Value: !GetAtt FSxLFilesystem.LustreMountName
    Export:
      Name: !Sub ${AWS::StackName}-FSxLustreFilesystemMountname
  FSxLustreFilesystemDNSname:
    Description: The DNS of the FSxL filesystem that has been created
    Value: !GetAtt FSxLFilesystem.DNSName
    Export:
      Name: !Sub ${AWS::StackName}-FSxLustreFilesystemDNSname
  FSxLustreFilesystemId:
    Description: The ID of the FSxL filesystem that has been created
    Value: !Ref FSxLFilesystem
    Export:
      Name: !Sub ${AWS::StackName}-FSxLustreFilesystemId
  AmazonSagemakerClusterExecutionRoleArn:
    Description: The Role ARN used for cluster creation
    Value: !GetAtt AmazonSagemakerClusterExecutionRole.Arn
    Export:
      Name: !Sub ${AWS::StackName}-AmazonSagemakerClusterExecutionRoleArn
  AmazonS3BucketName:
    Description: The S3 bucket where Lifecycle scripts are stored
    Value: !Ref LCScriptsBucket
    Export:
      Name: !Sub ${AWS::StackName}-AmazonSagemakerLCScriptsBucketName
